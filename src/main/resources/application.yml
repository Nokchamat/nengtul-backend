spring:
  # Database ??
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER_NAME}
    password: ${DB_PASSWORD}
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
  # JPA ??
  elasticsearch:
    uris: ${ES_URI}
#    password: ${ES_PASSWORD}
#    username: ${ES_USER_NAME}
  jpa:
    generate-ddl: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
      #format_sql: true
      #show_sql: false
      #use_sql_comments: true
    open-in-view: false
  jwt:
    secret-key: ${spring.jwt.secret-key}

    access:
      expiration: 3600000 # 1시간(60분) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
      header: Authorization

    refresh:
      expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
      header: Authorization-refresh
  mailgun:
    secret-key: ${spring.mailgun.secret-key}
    domain: ${spring.mailgun.domain}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google.client-id}
            client-secret: ${google.client-secret}
            scope: profile, email
          naver:
            client-id: ${naver.client-id}
            client-secret: ${naver.client-secret}
            redirect-uri: ${naver.redirect-uri}
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
          kakao:
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            redirect-uri: ${kakao.redirect-uri}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  batch:
    job.enabled: false
    jdbc:
      initialize-schema: always
    job:
      name: crawlingJob

  servlet:
    multipart:
      max-file-size: 1MB # 요청한 파일 한 개의 크기
      max-request-size: 1MB # 요청한 파일 전체의 크기

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ${BUCKET_ACCESS_KEY}
      secretKey: ${BUCKET_SECRET_KEY}
